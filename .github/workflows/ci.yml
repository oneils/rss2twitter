name: build
on: [push, pull_request]
jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:

    - name: set up go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
      id: go

    - name: check out code
      uses: actions/checkout@v2

    - name: install golangci-lint and goveralls
      run: |
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.20.0
         GO111MODULE=off go get -u github.com/mattn/goveralls

    - name: test and lint
      run: |
        go test -mod=vendor -covermode=count -coverprofile=profile.cov ./...
        $GITHUB_WORKSPACE/golangci-lint run

    - name: submit coverage
      run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    
    - name: build docker image
      run: docker build .

    - name: build and deploy master image to ghcr.io and dockerhub
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push \
            --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
            --platform linux/amd64,linux/arm/v7,linux/arm64 \
            -t ghcr.io/${USERNAME}/rss2twitter:${ref} -t ${USERNAME}/rss2twitter:${ref} .

    - name: deploy tagged (latest) to ghcr.io and dockerhub
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push \
            --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
            --platform linux/amd64,linux/arm/v7,linux/arm64 \
            -t ghcr.io/${USERNAME}/rss2twitter:${ref} -t ghcr.io/${USERNAME}/rss2twitter:latest \
            -t ${USERNAME}/rss2twitter:${ref} -t ${USERNAME}/rss2twitter:latest .


